{"version":3,"sources":["webpack:///./src/views/img-steganography.vue?20a7","webpack:///src/views/img-steganography.vue","webpack:///./src/views/img-steganography.vue?454c","webpack:///./src/views/img-steganography.vue","webpack:///./src/views/img-steganography.vue?d81c"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","style","ref","attrs","staticStyle","_v","on","inputFile","$event","getCanvasData","aaa","staticRenderFns","component"],"mappings":"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","file":"js/chunk-61a0624d.79c4ced9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"content\",style:(\"background:white\")},[_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\",\"width\":\"800\",\"height\":\"800\"}})]),_c('div',{staticClass:\"operations\"},[_c('div',{staticStyle:{\"height\":\"800px\",\"margin\":\"0 auto\"}},[_vm._v(\" 1.选择需要加密的文件,或手绘后再执行第二步 \"),_c('el-button',{staticStyle:{\"width\":\"100%\",\"margin\":\"10px auto\"},attrs:{\"type\":\"success\",\"size\":\"default\"},on:{\"click\":_vm.inputFile}},[_vm._v(\" 选择加密内容(图片) \")]),_vm._v(\" 2.保存加密画布信息 \"),_c('el-button',{staticStyle:{\"width\":\"100%\",\"margin\":\"10px auto\"},attrs:{\"type\":\"primary\",\"size\":\"default\"},on:{\"click\":function($event){return _vm.getCanvasData('hiddenData')}}},[_vm._v(\" 保存隐写的信息 \")]),_vm._v(\" 3.选择需要隐写到的目标图片 \"),_c('el-button',{staticStyle:{\"width\":\"100%\",\"margin\":\"10px auto\"},attrs:{\"type\":\"success\",\"size\":\"default\"},on:{\"click\":_vm.inputFile}},[_vm._v(\" 选择文件 \")]),_vm._v(\" 4.开始加密 \"),_c('el-button',{staticStyle:{\"width\":\"100%\",\"margin\":\"10px auto\"},attrs:{\"type\":\"primary\",\"size\":\"default\"},on:{\"click\":_vm.inputFile}},[_vm._v(\" 开始加密 \")]),_vm._v(\" 5.加密完成,点击生成图片下载加密后的图片 \"),_c('el-button',{staticStyle:{\"width\":\"100%\",\"margin\":\"10px auto\"},attrs:{\"type\":\"primary\",\"size\":\"default\"},on:{\"click\":_vm.aaa}},[_vm._v(\" 生成图片 \")])],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!--  -->\r\n    <div class=\"home\">\r\n        <div class=\"content\" :style=\"`background:white`\" v-loading=\"loading\">\r\n            <canvas id=\"canvas\" ref=\"canvas\" width=\"800\" height=\"800\"></canvas>\r\n        </div>\r\n        <div class=\"operations\">\r\n            <div style=\"height: 800px; margin: 0 auto\">\r\n                1.选择需要加密的文件,或手绘后再执行第二步\r\n                <el-button\r\n                    type=\"success\"\r\n                    style=\"width: 100%; margin: 10px auto\"\r\n                    size=\"default\"\r\n                    @click=\"inputFile\"\r\n                >\r\n                    选择加密内容(图片)\r\n                </el-button>\r\n                2.保存加密画布信息\r\n                <el-button\r\n                    type=\"primary\"\r\n                    style=\"width: 100%; margin: 10px auto\"\r\n                    size=\"default\"\r\n                    @click=\"getCanvasData('hiddenData')\"\r\n                >\r\n                    保存隐写的信息\r\n                </el-button>\r\n                3.选择需要隐写到的目标图片\r\n                <el-button\r\n                    type=\"success\"\r\n                    style=\"width: 100%; margin: 10px auto\"\r\n                    size=\"default\"\r\n                    @click=\"inputFile\"\r\n                >\r\n                    选择文件\r\n                </el-button>\r\n                4.开始加密\r\n                <el-button\r\n                    type=\"primary\"\r\n                    style=\"width: 100%; margin: 10px auto\"\r\n                    size=\"default\"\r\n                    @click=\"inputFile\"\r\n                >\r\n                    开始加密\r\n                </el-button>\r\n                5.加密完成,点击生成图片下载加密后的图片\r\n                <el-button\r\n                    type=\"primary\"\r\n                    style=\"width: 100%; margin: 10px auto\"\r\n                    size=\"default\"\r\n                    @click=\"aaa\"\r\n                >\r\n                    生成图片\r\n                </el-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n/* eslint-disable */\r\nimport { fabric } from \"fabric\";\r\nimport { inputFile } from \"@utils/inputFile.js\";\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    components: {},\r\n    data() {\r\n        return { loading: false, ctx: null, canvas: null, blockList: [], hiddenData: null };\r\n    },\r\n    inject: [\"contentReload\"],\r\n    watch: {\r\n        $route: {\r\n            handler() {\r\n                this.contentReload();\r\n            },\r\n            immediate: false,\r\n        },\r\n    },\r\n    mounted() {\r\n        this.initCanvas();\r\n    },\r\n    methods: {\r\n        //初始化画布\r\n        initCanvas() {\r\n            this.canvas = new fabric.Canvas(\"canvas\", {\r\n                isDrawingMode: true, //自由绘画模式\r\n                selectable: false,\r\n                selection: false,\r\n                hoverCursor: \"pointer\",\r\n                devicePixelRatio: true, //Retina 高清屏 屏幕支持\r\n                stroke: \"lightgreen\",\r\n                strokeWidth: 4,\r\n            });\r\n            this.ctx = this.canvas.getContext(\"2d\");\r\n            // this.canvas.isDrawingMode = true;\r\n            this.canvas.freeDrawingBrush.color = \"blue\";\r\n            this.canvas.freeDrawingBrush.width = 5;\r\n            // this.addCanvasEvent(); //给画布添加事件\r\n        },\r\n        //素材图片选择回调\r\n        async inputFile() {\r\n            let files = await inputFile();\r\n            this.drawImage(files[0]);\r\n        },\r\n        //绘制目标图片\r\n        drawImage(url) {\r\n            this.loading = true;\r\n            fabric.Image.fromURL(url, (img) => {\r\n                //设置缩放比例,长图的缩放比为this.canvas.width / img.width,宽图的缩放比为this.canvas.height / img.height\r\n                let scale =\r\n                    img.height > img.width\r\n                        ? this.canvas.width / img.width\r\n                        : this.canvas.height / img.height;\r\n                img.set({\r\n                    left: this.canvas.width / 2, //距离左边的距离\r\n                    originX: \"center\", //图片在原点的对齐方式\r\n                    originY: \"center\",\r\n                    top: this.canvas.height / 2,\r\n                    scaleX: scale, //横向缩放\r\n                    scaleY: scale, //纵向缩放\r\n                    selectable: false, //可交互\r\n                });\r\n                img.on(\"added\", (e) => {\r\n                    //这里有个问题,added后获取的是之前的画布像素数据,其他手动触发的事件,不会有这种问题\r\n                    //故用一个异步解决\r\n                    setTimeout(() => {\r\n                        this.getCanvasData();\r\n                    }, 500);\r\n                });\r\n                this.canvas.add(img); //将图片添加到画布\r\n                // this.drawLine(); //绘制网格线条\r\n            });\r\n        },\r\n        //获取画布像素数据\r\n        getCanvasData() {\r\n            this.blockList = [];\r\n            let tempColorData = this.ctx.getImageData(\r\n                0,\r\n                0,\r\n                this.canvas.width,\r\n                this.canvas.height\r\n            ).data;\r\n            function evenNum(num) {\r\n                num = num > 254 ? num - 1 : num;\r\n                num = num % 2 == 1 ? num - 1 : num;\r\n                return num;\r\n            }\r\n            for (let i = 0; i < tempColorData.length; i += 4) {\r\n                this.blockList.push([\r\n                    /* evenNum(tempColorData[i]).toString(2).padStart(8, \"0\").split(\"\"),\r\n                    evenNum(tempColorData[i + 1])\r\n                        .toString(2)\r\n                        .padStart(8, \"0\")\r\n                        .split(\"\"),\r\n                    evenNum(tempColorData[i + 2])\r\n                        .toString(2)\r\n                        .padStart(8, \"0\")\r\n                        .split(\"\"),\r\n                    evenNum(tempColorData[i + 3])\r\n                        .toString(2)\r\n                        .padStart(8, \"0\")\r\n                        .split(\"\"), */\r\n                    evenNum(tempColorData[i]),\r\n                    evenNum(tempColorData[i + 1]),\r\n                    evenNum(tempColorData[i + 2]),\r\n                    evenNum(tempColorData[i + 3]),\r\n                    // tempColorData[i],\r\n                    // tempColorData[i + 1],\r\n                    // tempColorData[i + 2],\r\n                    // tempColorData[i + 3],\r\n                ]);\r\n            }\r\n            console.log(this.blockList);\r\n            this.loading = false;\r\n        },\r\n        drawHiddenData() {},\r\n        processData(originalData) {\r\n            let data = originalData.data;\r\n            for (let i = 0; i < data.length; i++) {\r\n                if (i % 4 == 0) {\r\n                    // 红色分量\r\n                    if (data[i] % 2 == 0) {\r\n                        data[i] = 0;\r\n                    } else {\r\n                        data[i] = 255;\r\n                    }\r\n                } else if (i % 4 == 3) {\r\n                    // alpha通道不做处理\r\n                    continue;\r\n                } else {\r\n                    // 关闭其他分量，不关闭也不影响答案，甚至更美观 o(^▽^)o\r\n                    data[i] = 0;\r\n                }\r\n            }\r\n            // 将结果绘制到画布\r\n            ctx.putImageData(originalData, 0, 0);\r\n        },\r\n        merge() {\r\n            let oData = originalData.data;\r\n            let bit, offset; // offset的作用是找到alpha通道值，这里需要大家自己动动脑筋\r\n\r\n            switch (color) {\r\n                case \"R\":\r\n                    bit = 0;\r\n                    offset = 3;\r\n                    break;\r\n                case \"G\":\r\n                    bit = 1;\r\n                    offset = 2;\r\n                    break;\r\n                case \"B\":\r\n                    bit = 2;\r\n                    offset = 1;\r\n                    break;\r\n            }\r\n\r\n            for (let i = 0; i < oData.length; i++) {\r\n                if (i % 4 == bit) {\r\n                    // 只处理目标通道\r\n                    if (newData[i + offset] === 0 && oData[i] % 2 === 1) {\r\n                        // 没有信息的像素，该通道最低位置0，但不要越界\r\n                        if (oData[i] === 255) {\r\n                            oData[i]--;\r\n                        } else {\r\n                            oData[i]++;\r\n                        }\r\n                    } else if (newData[i + offset] !== 0 && oData[i] % 2 === 0) {\r\n                        // // 有信息的像素，该通道最低位置1，可以想想上面的斑点效果是怎么实现的\r\n                        if (oData[i] === 255) {\r\n                            oData[i]--;\r\n                        } else {\r\n                            oData[i]++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ctx.putImageData(originalData, 0, 0);\r\n        },\r\n        aaa() {},\r\n        //导出图片\r\n        exportCanvas() {\r\n            const dataURL = this.canvas.toDataURL({\r\n                width: this.canvas.width,\r\n                height: this.canvas.height,\r\n                left: 0,\r\n                top: 0,\r\n                format: \"png\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.download = \"canvas.png\";\r\n            link.href = dataURL;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }, //重置\r\n        reload() {\r\n            // window.location.reload();\r\n            console.log(this.canvas.viewportTransform);\r\n            this.canvas.deactivateAll().renderAll();\r\n            //http://fabricjs.com/fabric-intro-part-5#pan_zoom\r\n            // this.canvas.clear(); // 清空画布\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.home {\r\n    transition: width 0.28s;\r\n    width: 100vw;\r\n    min-width: 1200px;\r\n    height: 100vh;\r\n    display: flex;\r\n    .operations {\r\n        background: #516fa3;\r\n        padding: 20px;\r\n        width: 300px;\r\n        color: white;\r\n        border: 1px solid #516fa3;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: 820px;\r\n        overflow: hidden;\r\n        flex: 1;\r\n        position: relative;\r\n\r\n        .watermarkContainer {\r\n            // background-color: #91a8d0;\r\n            width: calc(100vw - 342px);\r\n            height: 100%;\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            top: 0;\r\n            bottom: 0;\r\n            z-index: 999999;\r\n            pointer-events: none; /* 上层加上这句样式可以实现点击穿透 */\r\n        }\r\n    }\r\n}\r\n#canvas {\r\n    border: 1px dashed #516fa3;\r\n    // object-fit: fill;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./img-steganography.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./img-steganography.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./img-steganography.vue?vue&type=template&id=263021ac&scoped=true&\"\nimport script from \"./img-steganography.vue?vue&type=script&lang=js&\"\nexport * from \"./img-steganography.vue?vue&type=script&lang=js&\"\nimport style0 from \"./img-steganography.vue?vue&type=style&index=0&id=263021ac&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"263021ac\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./img-steganography.vue?vue&type=style&index=0&id=263021ac&lang=scss&scoped=true&\""],"sourceRoot":""}