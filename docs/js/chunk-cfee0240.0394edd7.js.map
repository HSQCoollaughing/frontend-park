{"version":3,"sources":["webpack://frontend-park-[name]/./src/assets/qr.jpg","webpack://frontend-park-[name]/./src/views/other/test.vue?22b7","webpack://frontend-park-[name]/src/views/other/test.vue","webpack://frontend-park-[name]/./src/views/other/test.vue?2bfe","webpack://frontend-park-[name]/./src/views/other/test.vue","webpack://frontend-park-[name]/./src/views/other/test.vue?63bd"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","staticRenderFns","data","text","ctx","canvas","created","mounted","isDrawingMode","selectable","selection","hoverCursor","devicePixelRatio","stroke","strokeWidth","methods","generate","left","top","fill","width","height","radius","fabric","img","exportCanvas","format","link","document","addCanvasEvent","console","x","y","px","e","point","component"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,uB,2CCA3C,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,SAAS,CAACG,IAAI,SAASD,YAAY,SAASE,MAAM,CAAC,GAAK,SAAS,MAAQ,MAAM,OAAS,YAChOC,EAAkB,G,wBCSP,GACbC,KADF,WAEI,MAAJ,CAAMC,KAANA,MAAMC,IAANA,KAAMC,OAANA,OAEEC,QAJF,aAKEC,QALF,WAMI,KAAJ,WAEI,KAAJ,wCACMC,eAANA,EACMC,YAANA,EACMC,WAANA,EACMC,YAANA,UACMC,kBAANA,EACMC,OAANA,aACMC,YAANA,IAEI,KAAJ,4BACI,KAAJ,kBAEEC,QAAFA,CACIC,SADJ,WAEM,IAAN,mCA0DA,GAzDA,mBAyDA,sBACQC,KAARA,IACQC,IAARA,IACQC,KAARA,QACQC,MAARA,IACQC,OAARA,OAGA,0BACQJ,KAARA,IACQC,IAARA,IACQC,KAARA,MACQG,OAARA,KAGA,4BACQL,KAARA,IACQC,IAARA,GACQC,KAARA,OACQC,MAARA,IACQC,OAARA,MAGMhB,EAANA,OACMA,EAANA,SAmBMkB,iDACEC,EAARA,UACQA,EAARA,KACUP,KAAVA,GACUC,IAAVA,KAEQb,EAARA,WAqCIoB,aAlJJ,WAmJM,IAAN,yBACQL,MAARA,kBACQC,OAARA,mBACQJ,KAARA,EACQC,IAARA,EACQQ,OAARA,QAEA,8BACMC,EAANA,sBACMA,EAANA,OACMC,SAANA,oBACMD,EAANA,QACMC,SAANA,qBAEIC,eAjKJ,WAiKM,IAAN,OAEM,KAAN,0CAEM,KAAN,0CAEM,KAAN,oCAEQ,GAAR,aACU,IAAV,2BACA,gBACA,gBACA,mCACUC,QAAVA,sBACAC,EADA,YACAC,EADA,kBACAC,KADA,YACAA,KADA,YACAA,KADA,YACAA,KADA,gCAEAA,KAFA,YAEAA,KAFA,YAEAA,KAFA,YAEAA,KAFA,WAOM,KAAN,qCACQC,EAARA,mBACQA,EAARA,oBACQ,IAAR,MACA,gEAEA,cAEA,0BAGUC,EAAVA,gDAEQ,EAAR,4CACQ,EAAR,yBACQ,EAAR,yBACQ,EAAR,iCAGM,KAAN,WACQ,aAAR,YACA,aACY,EAAZ,WACY,EAAZ,sBAGQ,WAAR,YACU,EAAV,WACU,EAAV,qBAEQ,aAAR,YACU,GAAV,mBACY,IAAZ,qDACY,EAAZ,0BAIM,KAAN,WAEQ,gBAAR,YACUL,QAAVA,SACUI,EAAVA,mBAGQ,kBAAR,YACUA,EAAVA,uBChQ6V,I,wBCQzVE,EAAY,eACd,EACA7C,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAAmC,E,kECnBf","file":"js/chunk-cfee0240.0394edd7.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/qr.a202239b.jpg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-container\"},[_c('canvas',{ref:\"canvas\",staticClass:\"canvas\",attrs:{\"id\":\"canvas\",\"width\":\"800\",\"height\":\"500\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"page-container\">\r\n        <canvas class=\"canvas\" id=\"canvas\" ref=\"canvas\" width=\"800\" height=\"500\"></canvas>\r\n        <!-- <img id=\"img\" src=\"../assets/rd.png\" alt=\"\" /> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport { fabric } from \"fabric\";\r\nexport default {\r\n    data() {\r\n        return { text: \"???\", ctx: null, canvas: null };\r\n    },\r\n    created() {},\r\n    mounted() {\r\n        this.generate();\r\n        //初始化画布\r\n        this.canvas = new fabric.Canvas(\"canvas\", {\r\n            isDrawingMode: false, //自由绘画模式\r\n            selectable: false,\r\n            selection: false,\r\n            hoverCursor: \"pointer\",\r\n            devicePixelRatio: true, //Retina 高清屏 屏幕支持\r\n            stroke: \"lightgreen\",\r\n            strokeWidth: 4,\r\n        });\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.addCanvasEvent(); //给画布添加事件\r\n    },\r\n    methods: {\r\n        generate() {\r\n            let canvas = new fabric.Canvas(\"canvas\");\r\n            let ctx = canvas.getContext(\"2d\");\r\n            // canvas.isDrawingMode = true;\r\n            // canvas.freeDrawingBrush.color = \"blue\";\r\n            // canvas.freeDrawingBrush.width = 5;\r\n            /*             let rect = new fabric.Rect({\r\n                left: 400, //距离左边的距离\r\n                top: 200, //距离上边的距离\r\n                fill: \"green\", //填充的颜色\r\n                width: 200, //宽度\r\n                height: 200, //高度\r\n            });\r\n            let circle = new fabric.Circle({\r\n                left: 0, //距离左边的距离\r\n                top: 0, //距离上边的距离\r\n                fill: \"red\", //填充的颜色\r\n                radius: 50, //圆的半径\r\n            });\r\n            console.log(circle);\r\n\r\n            circle.setGradient(\"fill\", {\r\n                // 渐变开始的位置\r\n                x1: 0,\r\n                y1: 0,\r\n                // 渐变结束的位置\r\n                x2: circle.width,\r\n                y2: 0,\r\n                //渐变的颜色\r\n                colorStops: {\r\n                    // 渐变的范围(0,0.1,0.3,0.5,0.75,1)0-1之间都可以\r\n                    0: \"red\",\r\n                    1: \"blue\",\r\n                },\r\n            }); */\r\n            /* rect.animate(\"angle\", 45, {\r\n                onChange: canvas.renderAll.bind(canvas),\r\n            }); */\r\n            /* rect.set({ angle: 45 });\r\n            rect.animate(\"angle\", \"-=90\", {\r\n                onChange: canvas.renderAll.bind(canvas),\r\n                duration: 2000,\r\n            }); */\r\n            /* rect.animate(\"left\", 100, {\r\n                onChange: canvas.renderAll.bind(canvas),\r\n                duration: 1500,\r\n            }); */\r\n            /*             rect.animate(\"left\", \"+=100\", {\r\n                onChange: canvas.renderAll.bind(canvas),\r\n                duration: 1000,\r\n            }); */\r\n            /* rect.animate(\"left\", 100, {\r\n                onChange: canvas.renderAll.bind(canvas),\r\n                duration: 1000,\r\n                easing: fabric.util.ease.easeOutBounce,\r\n            });\r\n            canvas.add(rect); */\r\n            // let canvas = new fabric.StaticCanvas(\"canvas\");\r\n            // 创建一个矩形对象\r\n            let rect = new fabric.Rect({\r\n                left: 200, //距离左边的距离\r\n                top: 200, //距离上边的距离\r\n                fill: \"green\", //填充的颜色\r\n                width: 200, //宽度\r\n                height: 200, //高度\r\n            });\r\n            // 创建一个圆形对象\r\n            let circle = new fabric.Circle({\r\n                left: 500, //距离左边的距离\r\n                top: 300, //距离上边的距离\r\n                fill: \"red\", //填充的颜色\r\n                radius: 50, //圆的半径\r\n            });\r\n            // 创建一个三角形对象\r\n            let triangle = new fabric.Triangle({\r\n                left: 400, //距离左边的距离\r\n                top: 50, //距离上边的距离\r\n                fill: \"blue\", //填充的颜色\r\n                width: 100, //宽度\r\n                height: 100, //高度\r\n            });\r\n            // 将图形形添加到canvas画布上\r\n            canvas.add(rect);\r\n            canvas.add(circle, triangle);\r\n\r\n            //绘制图片\r\n            /* fabric.Image.fromURL(\r\n                \"https://img2.baidu.com/it/u=2067045147,1367384486&fm=26&fmt=auto&gp=0.jpg\",\r\n                (img) => {\r\n                    // 添加滤镜\r\n                    img.filters.push(new fabric.Image.filters.Grayscale());\r\n                    // 图片加载完成之后，应用滤镜效果\r\n                    img.applyFilters();\r\n                    img.set({\r\n                        left: 0,\r\n                        top: 0,\r\n                    });\r\n                    canvas.add(img);\r\n                },\r\n                { crossOrigin: \"anonymous\" }\r\n            ); */\r\n\r\n            fabric.Image.fromURL(require(\"@/assets/qr.jpg\"), function (img) {\r\n                img.scale(0.5);\r\n                img.set({\r\n                    left: 50,\r\n                    top: 50,\r\n                });\r\n                canvas.add(img);\r\n            });\r\n\r\n            /* let customPath = new fabric.Path(\r\n                \"M 0 0 L 300 100 L 170 100 L 70 300 L 20 200 C136.19,2.98,128.98,0,121.32,0 z\"\r\n            ); */\r\n\r\n            /* customPath.set({\r\n                left: 100,\r\n                top: 100,\r\n                fill: \"green\",\r\n            });\r\n            canvas.add(customPath); */\r\n\r\n            /* canvas.on(\"mouse:down\", function (options) {\r\n                canvas.clear();\r\n                let text = new fabric.Text(\"你点我啦~\", {\r\n                    left: 200,\r\n                    top: 200,\r\n                });\r\n                canvas.add(text);\r\n                console.log(options.e.clientX, options.e.clientY);\r\n            });\r\n            canvas.on(\"mouse:up\", function (options) {\r\n                this.text = \"你没点我0.0\";\r\n                canvas.clear();\r\n                let text = new fabric.Text(\"你没点我0.0\", {\r\n                    left: 200,\r\n                    top: 200,\r\n                });\r\n                canvas.add(text);\r\n                console.log(options.e.clientX, options.e.clientY);\r\n            }); */\r\n            // canvas.isDrawingMode = true;\r\n            // canvas.freeDrawingBrush.color = \"blue\";\r\n            // canvas.freeDrawingBrush.width = 5;\r\n        },\r\n        exportCanvas() {\r\n            const dataURL = this.canvas.toDataURL({\r\n                width: this.canvas.width,\r\n                height: this.canvas.height,\r\n                left: 0,\r\n                top: 0,\r\n                format: \"png\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.download = \"canvas.png\";\r\n            link.href = dataURL;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }, //添加画布事件\r\n        addCanvasEvent() {\r\n            //画布重绘\r\n            this.canvas.on(\"after:render\", (e) => {});\r\n            //有对象添加进来\r\n            this.canvas.on(\"object:added\", (e) => {});\r\n            //鼠标单击\r\n            this.canvas.on(\"mouse:down\", (e) => {\r\n                //ALT键盘+单击,获取当前光标处像素的值\r\n                if (e.e.ctrlKey) {\r\n                    let mouse = this.canvas.getPointer(e.e);\r\n                    let x = parseInt(mouse.x);\r\n                    let y = parseInt(mouse.y);\r\n                    let px = this.ctx.getImageData(x, y, 1, 1).data;\r\n                    console.log(\r\n                        `%c x,y:(${x},${y})/rgba(${px[0]},${px[1]},${px[2]},${px[3]})`,\r\n                        `background: rgba(${px[0]},${px[1]},${px[2]},${px[3]});`\r\n                    );\r\n                }\r\n            });\r\n            // 滚轮事件\r\n            this.canvas.on(\"mouse:wheel\", (e) => {\r\n                e.e.preventDefault();\r\n                e.e.stopPropagation();\r\n                let ZOOM = 0.05;\r\n                let point = new fabric.Point(this.canvas.width / 2 - 1, this.canvas.height / 2 - 1);\r\n                //(alt + whell 缩放)\r\n                if (!e.e.ctrlKey) {\r\n                    return;\r\n                } else if (e.e.altKey && e.e.ctrlKey) {\r\n                    //(ctrl + alt + whell 加速缩放)\r\n                    // ZOOM = 0.1;\r\n                    point = new fabric.Point(e.pointer.x, e.pointer.y);\r\n                }\r\n                this.zoom = (e.e.deltaY > 0 ? -ZOOM : ZOOM) + this.canvas.getZoom();\r\n                this.zoom = Math.max(0.1, this.zoom); //最小为原来的0.1倍\r\n                this.zoom = Math.min(10, this.zoom); //最大是原来的10倍\r\n                this.canvas.zoomToPoint(point, this.zoom);\r\n            });\r\n            //画布随着鼠标移动。\r\n            this.canvas.on({\r\n                \"mouse:down\": (e) => {\r\n                    if (e.e.altKey) {\r\n                        this.panning = true;\r\n                        this.canvas.selection = false;\r\n                    }\r\n                },\r\n                \"mouse:up\": (e) => {\r\n                    this.panning = false;\r\n                    this.canvas.selection = true;\r\n                },\r\n                \"mouse:move\": (e) => {\r\n                    if (this.panning && e && e.e) {\r\n                        let delta = new fabric.Point(e.e.movementX, e.e.movementY);\r\n                        this.canvas.relativePan(delta);\r\n                    }\r\n                },\r\n            });\r\n            this.canvas.on({\r\n                //对象被移动时,添加透明效果\r\n                \"object:moving\": function (e) {\r\n                    console.log(123);\r\n                    e.target.opacity = 0.5;\r\n                },\r\n                //对象被改变后\r\n                \"object:modified\": function (e) {\r\n                    e.target.opacity = 1;\r\n                },\r\n            });\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.page-container {\r\n    text-align: center;\r\n    .canvas {\r\n        margin: 0 auto;\r\n        border: 1px solid black;\r\n    }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test.vue?vue&type=template&id=68ca1e28&scoped=true&\"\nimport script from \"./test.vue?vue&type=script&lang=js&\"\nexport * from \"./test.vue?vue&type=script&lang=js&\"\nimport style0 from \"./test.vue?vue&type=style&index=0&id=68ca1e28&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"68ca1e28\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=style&index=0&id=68ca1e28&scoped=true&lang=scss&\""],"sourceRoot":""}